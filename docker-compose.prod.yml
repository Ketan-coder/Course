#version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: >
      bash -c "python manage.py collectstatic --noinput &&
               python manage.py migrate &&
               gunicorn -k uvicorn.workers.UvicornWorker Course.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    container_name: sajan_giri_app
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=0
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  db:
    image: postgres:17
    container_name: sajan_giri_db
    ports:
      - "5432:5432"
    volumes:
      - sajan_giri_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - web
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done'"
    depends_on:
      - nginx

  redis:
    image: redis:7
    container_name: sajan_giri_redis
    ports:
      - "6379:6379"

volumes:
  sajan_giri_db:
  static_volume:
  media_volume:
